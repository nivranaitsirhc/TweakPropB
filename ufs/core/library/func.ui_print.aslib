#!/sbin/sh
#
# aslib library
#

##### ASLIB.UI_PRINT.INIT_FD
init_fd(){
	for FD in `ls /proc/$$/fd`; do
		readlink /proc/$$/fd/$FD 2>/dev/null | grep pipe >/dev/null
		[ "$?" -eq "0" ] && {
		  ps | grep " 3 $FD " | grep -v grep >/dev/null
		  [ "$?" -eq "0" ] && {
			OUTFD=$FD
			break
		  }
		}
	done
}

##### ASLIB.UI_PRINT
ui_print() {
	[ -z "$OUTFD" ] && init_fd
	
	echo -n -e "ui_print $1\n" >> /proc/self/fd/$OUTFD;
	echo -n -e "ui_print\n"    >> /proc/self/fd/$OUTFD;
	
	[ -n "$1" ] && alLog "$1"
}

##### ASLIB.SET_PROGRESS
set_progress() {
	[ -z "$OUTFD" ] && init_fd
	echo "set_progress $1" 1>&$OUTFD;
}

##### ASLIB.PROGRESS
progress() {
	[ -z "$OUTFD" ] && init_fd
	echo "progress $1 $2 " 1>&$OUTFD;
}


##### ASLIB.ADD.PRINT_HEADER
print_header(){
	[ -z "$OUTFD" ] && init_fd
	
	set=0;tmh_init=false;

	#[ -z "$TMH0" ] && set=$((++set))

	while true;do
		eval val='$'TMH${set}
		if [ "$val" == "#" ];then
			ui_print " "
		elif [ -n "$val" ]; then
			ui_print "$val"
		elif [ -z "$val" ]; then
			# ignore the first blank TMH
			[ "$tmh_init" == "true" ] && {
				break
			}
			tmh_init=true
		fi
		set=$((++set))
	done
}
