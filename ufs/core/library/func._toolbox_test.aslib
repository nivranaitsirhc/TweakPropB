#!/sbin/sh
#
#	aslib library
#
#	CodRLabworks
#	CodRCA aslib Library Template v4
#

# LIBRARY DESCRIPTION
# --------------------------------------------------------------------------------
# I: TOOLS TEST library 
#
#

# ----------------------------- ASLIB LIBRARY HEADER -----------------------------
# ASLIB CLEAR
# --------------------------------------------------------------------------------
# I: Add The Paths of the files or directory that will be cleared by ASLIB_CLEAR separated by a double dot
[ -z "$ASLIB_CLEAR" ] && {
	# aslib clear is not defined by aslib loader may be obsolete or library is sourced directly
	printf "I: Lib $AS_SCRIPT is sourced directly"
}
ASLIB_CLEAR "YOUR_PATH"
# ---------------------------------- END HEADER ----------------------------------

# INIT VARIABLES
# --------------------------------------------------------------------------------
# I: INIT your variables here. avoid exporting your variables here. add it in the
#    aslib loader.


# FUNCTIONS
# --------------------------------------------------------------------------------
# I: DEFINE your functions

##### ASLIB.SUB.IS_MOUNTED
is_mounted() {
	$LT4 "D: ASLIB exec is_mounted with $1 $2"
	[ -n "$2" ] && {
		(cat /proc/mounts | grep $1 | grep -q -m 1 $2,)	&& s=0 || s=1
	} || {
		(cat /proc/mounts | grep -q -m 1 $1)			&& s=0 || s=1
	}
	[ "$s" == "0" ] && \
	$LT4 "D: ASLIB is_mounted: $1 is mounted $2" || \
	$LT4 "D: ASLIB is_mounted: $1 is not mounted"
	return $s
}

###### ASLIB.SUB.IS_ENABLED
is_enabled() {
	$LT4 "D: ASLIB exec is_enabled with $1"
	[ -z "$1" ] && {
		$LT4 "E: ASLIB is_enabled: function called without an input, returning false"
		return 1
	}
	eval ie_t='$'$1
	case $ie_t in
		1|enable|true|True|TRUE|ENABLED|ENABLE) 
			$LT4 "I: ASLIB is_enabled: ENABLED, by $1 set to $ie_t"
			s=0
		;;
		0|disable|false|False|FALSE|DISABLED|DISABLE|' ')
			$LT4 "I: ASLIB is_enabled: DISABLED, by $1 set to $ie_t"
			s=1
		;;
		*) 	$LT4 "E: ASLIB is_enabled: unknown state of \"$1\" set to \"$ie_t\", returning err_code 1"
			s=1
		;;
	esac
	return $s
}

# INIT SCRIPT
# --------------------------------------------------------------------------------
# I: INITIALIZE your library

# Rename this function with format init_YOUR_LIBRARY_NAME as it will be run by aslib loader after
# all the libraries are loaded. 
# e.g.
# your library					proper function init name	 
# func.DUMMY_LIBRARY.aslib ->	init_DUMMY_LIBRARY(){}
#

init__toolbox_test(){
	return 0
}

# ASLIB RETURN CONFIRMATION
# --------------------------------------------------------------------------------
# 
printf "SCRIPT LOADED $AS_SCRIPT\n"